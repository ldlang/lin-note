import{_ as s,o as a,c as e,e as p}from"./app-70f1c539.js";const t="/lin-note/mysql/JOIN.png",o={};function l(c,n){return a(),e("div",null,[...n[0]||(n[0]=[p(`<h1 id="多表查询" tabindex="-1"><a class="header-anchor" href="#多表查询" aria-hidden="true">#</a> 多表查询</h1><h2 id="_1、实现多表查询" tabindex="-1"><a class="header-anchor" href="#_1、实现多表查询" aria-hidden="true">#</a> 1、实现多表查询</h2><ol><li><p>笛卡尔积的错误</p><p>产生的原因：缺少了多表的连接条件，就会产生一张表的每一条记录，与另一张表的所有记录都匹配一次进行查询，最后得到的结果就是两张表数量的乘积。</p><p>解决方式：在 WHERE 后在指定两张表的连接条件。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 会出现笛卡尔积的查询</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> department_name <span class="token keyword">FROM</span> employees<span class="token punctuation">,</span> departments<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>指定两张表的连接条件，防止笛卡尔积</p><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段<span class="token number">1</span><span class="token punctuation">,</span> 字段<span class="token number">2</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span> 表<span class="token number">2</span> <span class="token keyword">WHERE</span> 表<span class="token number">1.</span>字段<span class="token number">1</span> <span class="token operator">=</span> 表<span class="token number">2.</span>字段<span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 employees 表的 employee_id 和 departments 表的 department_name，并指定连接关系</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> department_name <span class="token keyword">FROM</span> employees<span class="token punctuation">,</span> departments
<span class="token keyword">WHERE</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>如果一个字段名只在一张表中出现，是可以不用指定从那张表中查询的，但是如果同意这字段名在两张或者多张表中出现，那么就要指定从那张表中查询，为了 sql 的查询速度优化，最好每个字段都指定时从那张表来的。</p><p>两张表连接查询语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 表<span class="token number">1.</span>字段<span class="token number">1</span><span class="token punctuation">,</span> 表<span class="token number">1.</span>字段<span class="token number">2</span><span class="token punctuation">,</span> 表<span class="token number">2.</span>字段<span class="token number">3</span>
<span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span> 表<span class="token number">2</span>
<span class="token keyword">WHERE</span> 表<span class="token number">1.</span>字段<span class="token number">1</span> <span class="token operator">=</span> 表<span class="token number">2.</span>字段<span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多张表连接查询语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 表<span class="token number">1.</span>字段<span class="token number">1</span><span class="token punctuation">,</span> 表<span class="token number">1.</span>字段<span class="token number">2</span><span class="token punctuation">,</span> 表<span class="token number">2.</span>字段<span class="token number">3</span><span class="token punctuation">,</span> 表<span class="token number">3.</span>字段<span class="token number">4</span>
<span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span> 表<span class="token number">2</span><span class="token punctuation">,</span> 表<span class="token number">3</span>
<span class="token keyword">WHERE</span> 表<span class="token number">1.</span>字段<span class="token number">1</span> <span class="token operator">=</span> 表<span class="token number">2.</span>字段<span class="token number">3</span>
<span class="token operator">AND</span> 表<span class="token number">2.</span>字段<span class="token number">3</span> <span class="token operator">=</span> 表<span class="token number">3.</span>字段<span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询 employees 表的 employee_id、salary 和 departments 表的 department_name，并指定连接关系</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employees<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> departments<span class="token punctuation">.</span>department_name <span class="token punctuation">,</span> employees<span class="token punctuation">.</span>salary
<span class="token keyword">FROM</span> employees<span class="token punctuation">,</span> departments
<span class="token keyword">WHERE</span> employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询 employees 表的 employee_id、salary 、 departments 表的 department_name 和 locations 表的 locations_id，并指定连接关系。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name <span class="token punctuation">,</span> e<span class="token punctuation">.</span>salary<span class="token punctuation">,</span> l<span class="token punctuation">.</span>city
<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span> departments d<span class="token punctuation">,</span>locations l
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token operator">AND</span> d<span class="token punctuation">.</span>location_id <span class="token operator">=</span> l<span class="token punctuation">.</span>location_id<span class="token punctuation">;</span>

<span class="token comment"># 使用 JOIN...ON...的方式</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span> j<span class="token punctuation">.</span>city
<span class="token keyword">FROM</span> employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">JOIN</span> locations j
<span class="token keyword">ON</span> d<span class="token punctuation">.</span>location_id <span class="token operator">=</span> j<span class="token punctuation">.</span>location_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>表示可以设置别名的，在 FROM 的表名后面接上别名即可，但是一旦给某张表齐了别名，name 所有用到这张表的地方都要使用这张表的别名。</p><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 别名<span class="token number">1.</span>字段<span class="token number">1</span><span class="token punctuation">,</span> 别名<span class="token number">2.</span>字段<span class="token number">2</span> <span class="token punctuation">,</span> 别名<span class="token number">1.</span>字段<span class="token number">3</span>
<span class="token keyword">FROM</span> 表名<span class="token number">1</span> 别名<span class="token number">1</span><span class="token punctuation">,</span> 表名<span class="token number">2</span> 别名<span class="token number">2</span>
<span class="token keyword">WHERE</span> 别名<span class="token number">1.</span>字段<span class="token number">1</span> <span class="token operator">=</span> 别名<span class="token number">2.</span>字段<span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用别名查询 employees 表的 employee_id、salary 和 departments 表的 department_name，并指定连接关系</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> t1<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> t2<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span> t1<span class="token punctuation">.</span>salary
<span class="token keyword">FROM</span> employees t1<span class="token punctuation">,</span> departments t2
<span class="token keyword">WHERE</span> t1<span class="token punctuation">.</span>department_id <span class="token operator">=</span> t2<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>如果有 n 张表进行连接查询，那么只是有 n-1 个连接条件。</p></li></ol><h2 id="_2、多表查询的分类" tabindex="-1"><a class="header-anchor" href="#_2、多表查询的分类" aria-hidden="true">#</a> 2、多表查询的分类</h2><h3 id="等值连接和非等值连接" tabindex="-1"><a class="header-anchor" href="#等值连接和非等值连接" aria-hidden="true">#</a> 等值连接和非等值连接</h3><ul><li><p>等值连接</p><p>就是在 WHERE 的条件后面通过字段与字段直接 = 的方式查询</p><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段<span class="token number">1</span><span class="token punctuation">,</span> 字段<span class="token number">2</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span> 表<span class="token number">2</span> <span class="token keyword">WHERE</span> 表<span class="token number">1.</span>字段<span class="token number">1</span> <span class="token operator">=</span> 表<span class="token number">2.</span>字段<span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>非等值连接</p><p>就是在 WHERE 的条件后面通过不是 = 的方式查询，比如 &gt;= 、BETWEEN... AND...</p><p>查询 employees 的 salary 在 job_grades 表中属于的工资等级。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>salary<span class="token punctuation">,</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> j<span class="token punctuation">.</span>grade_level
<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>job_grades j
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>salary
<span class="token operator">BETWEEN</span> j<span class="token punctuation">.</span>lowest_sal <span class="token operator">AND</span> j<span class="token punctuation">.</span>highest_sal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="自连接和-非自连接" tabindex="-1"><a class="header-anchor" href="#自连接和-非自连接" aria-hidden="true">#</a> 自连接和 非自连接</h3><ul><li><p>自连接就是在将一张表认为是两张表进行条件查询</p><p>注意：自连接一定要指定每个字段是从那种表来的</p><p>查询 employees 表中 first_name，manager_id 和他管理者的 first_name 和 employee_id</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e1<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> e1<span class="token punctuation">.</span>manager_id<span class="token punctuation">,</span> e2<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> e2<span class="token punctuation">.</span>employee_id
<span class="token keyword">FROM</span> employees e1<span class="token punctuation">,</span>employees e2
<span class="token keyword">WHERE</span> e1<span class="token punctuation">.</span>manager_id <span class="token operator">=</span> e2<span class="token punctuation">.</span>employee_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>非自连接就是，不是从同一张表去连接查询</p></li></ul><h3 id="内连接和外连接" tabindex="-1"><a class="header-anchor" href="#内连接和外连接" aria-hidden="true">#</a> 内连接和外连接</h3><ol><li><p>内连接</p><p>合并具有同一列的两个以上的表的行，结果集中不包含一个表与另一个表不匹配的行，就是在有两张表等于的条件下查询其他字段。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 必有 where...  ＝ 的条件基础下，对表进行查询</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>departments d
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>JOIN...ON...</code>的方式实现两张表的内连接</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>JOIN...ON...</code>的方式实现多张表的内连接</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span> j<span class="token punctuation">.</span>city
<span class="token keyword">FROM</span> employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">JOIN</span> locations j
<span class="token keyword">ON</span> d<span class="token punctuation">.</span>location_id <span class="token operator">=</span> j<span class="token punctuation">.</span>location_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>外连接</p><p>合并具有同一列的两个以上的表的行，结果集中除了包含一个表与另一个表匹配的行之二外，还查询到了左表和右边中不匹配的行。</p></li></ol><h3 id="外连接的分类" tabindex="-1"><a class="header-anchor" href="#外连接的分类" aria-hidden="true">#</a> 外连接的分类</h3><p>在<code>mysql</code>中使用<code>JOIN...ON...</code>实现，<code>JOIN...ON...</code>不仅仅是能解决外连接，也能实现其他的多表查询。</p><ol><li><p>左外连接</p><p>两个表在连接过程中除了返回满足连接条件的行以外还返回了左表中不满足条件的行</p><p><code>LEFT JOIN...ON...</code>，除了查询到所有满足条件的记录，还查询了左表(employees)不满足条件的记录</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>右外连接</p><p>两个表在连接过程中除了返回满足连接条件的行以外还返回了右表中不满足条件的行</p><p><code>RIGHT JOIN...ON...</code>，除了查询到所有满足条件的记录，还查询了右表(departments)不满足条件的记录</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>满连接 或 全连接</p><p>在 sql 的语法中是使用 <code>FULL JOIN...ON...</code>实现，但是<code>mysql</code><strong>不支持</strong>，在<code>mysql</code>就得借助<code>UNION</code>实现</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">FULL</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="union" tabindex="-1"><a class="header-anchor" href="#union" aria-hidden="true">#</a> UNION</h3><ol><li><code>UNION</code>操作符返回两个查询的结果集的并集，去除重复记录。</li><li><code>UNION ALL</code>操作符返回两个查询的结果集的并集，不去除重复记录。</li></ol><p>注意：执行<code>UNION ALL</code>语句时，所需要的资源比<code>UNION</code>语句少，如果明确的指导合并数据后的结果不存在重复的数据，获取不需要去重，则尽量使用<code>UNION ALL</code>提高数据查询的效率</p><h3 id="jion-的-7-中情况查询" tabindex="-1"><a class="header-anchor" href="#jion-的-7-中情况查询" aria-hidden="true">#</a> JION 的 7 中情况查询</h3><p><img src="`+t+`" alt="image"></p><ol><li><p>第 1 部分：左外连接</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>第 2 部分：右外连接</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>第 3 部分：内连接</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>第 4 部分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>第 5 部分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>第 6 部分：满连接</p><p>第 1 部分和第 5 部分组合起来，或者第 2 部分和第 4 部分组合起来就是满连接</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 第1部分和第5部分组合起来</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>

<span class="token comment"># 第2部分和第2部分组合起来</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>第 7 部分：</p><p>第 4 部分和第 5 部分组合起来就是第 7 部分</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">IS</span> <span class="token boolean">NULL</span>
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>department_name
<span class="token keyword">FROM</span> employees e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> departments d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,19)])])}const i=s(o,[["render",l],["__file","multiple-select.html.vue"]]);export{i as default};
