import{_ as d,o as a,c as r,e as s}from"./app-70f1c539.js";const e={};function n(l,t){return a(),r("div",null,[...t[0]||(t[0]=[s(`<h1 id="单行函数" tabindex="-1"><a class="header-anchor" href="#单行函数" aria-hidden="true">#</a> 单行函数</h1><ul><li>操作数据对象</li><li>接收参数返回一个结果</li><li>只对一行进行变换</li><li>每行返回一个结果</li><li>可以嵌套</li><li>参数可以是一列或一个值</li></ul><h2 id="数值函数" tabindex="-1"><a class="header-anchor" href="#数值函数" aria-hidden="true">#</a> 数值函数</h2><h3 id="_1、基本函数" tabindex="-1"><a class="header-anchor" href="#_1、基本函数" aria-hidden="true">#</a> 1、基本函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>ABS(x)</td><td>返回 x 的绝对值</td></tr><tr><td>SIGN(X)</td><td>返回 X 的符号。正数返回 1，负数返回-1，0 返回 0</td></tr><tr><td>PI()</td><td>返回圆周率的值</td></tr><tr><td>CEIL(x)，CEILING(x)</td><td>返回大于或等于某个值的最小整数</td></tr><tr><td>FLOOR(x)</td><td>返回小于或等于某个值的最大整数</td></tr><tr><td>LEAST(e1,e2,e3…)</td><td>返回列表中的最小值</td></tr><tr><td>GREATEST(e1,e2,e3…)</td><td>返回列表中的最大值</td></tr><tr><td>MOD(x,y)</td><td>返回 X 除以 Y 后的余数</td></tr><tr><td>RAND()</td><td>返回 0~1 的随机值</td></tr><tr><td>RAND(x)</td><td>返回 0~1 的随机值，其中 x 的值用作种子值，相同的 X 值会产生相同的随机数</td></tr><tr><td>ROUND(x)</td><td>返回一个对 x 的值进行四舍五入后，最接近于 X 的整数</td></tr><tr><td>ROUND(x,y)</td><td>返回一个对 x 的值进行四舍五入后最接近 X 的值，并保留到小数点后面 Y 位</td></tr><tr><td>TRUNCATE(x,y)</td><td>返回数字 x 截断为 y 位小数的结果</td></tr><tr><td>SQRT(x)</td><td>返回 x 的平方根。当 X 的值为负数时，返回 NULL</td></tr></tbody></table><h3 id="_2、角度与弧度互换函数" tabindex="-1"><a class="header-anchor" href="#_2、角度与弧度互换函数" aria-hidden="true">#</a> 2、角度与弧度互换函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>RADIANS(x)</td><td>将角度转化为弧度，其中，参数 x 为角度值</td></tr><tr><td>DEGREES(x)</td><td>将弧度转化为角度，其中，参数 x 为弧度值</td></tr></tbody></table><h3 id="_3、三角函数" tabindex="-1"><a class="header-anchor" href="#_3、三角函数" aria-hidden="true">#</a> 3、三角函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>SIN(x)</td><td>返回 x 的正弦值，其中，参数 x 为弧度值</td></tr><tr><td>ASIN(x)</td><td>返回 x 的反正弦值，即获取正弦为 x 的值。如果 x 的值不在-1 到 1 之间，则返回 NULL</td></tr><tr><td>COS(x)</td><td>返回 x 的余弦值，其中，参数 x 为弧度值</td></tr><tr><td>ACOS(x)</td><td>返回 x 的反余弦值，即获取余弦为 x 的值。如果 x 的值不在-1 到 1 之间，则返回 NULL</td></tr><tr><td>TAN(x)</td><td>返回 x 的正切值，其中，参数 x 为弧度值</td></tr><tr><td>ATAN(x)</td><td>返回 x 的反正切值，即返回正切值为 x 的值</td></tr><tr><td>ATAN2(m,n)</td><td>返回两个参数的反正切值</td></tr><tr><td>COT(x)</td><td>返回 x 的余切值，其中，X 为弧度值</td></tr></tbody></table><h3 id="_4、指数与对数" tabindex="-1"><a class="header-anchor" href="#_4、指数与对数" aria-hidden="true">#</a> 4、指数与对数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>POW(x,y)，POWER(X,Y)</td><td>返回 x 的 y 次方</td></tr><tr><td>EXP(X)</td><td>返回 e 的 X 次方，其中 e 是一个常数，2.718281828459045</td></tr><tr><td>LN(X)，LOG(X)</td><td>返回以 e 为底的 X 的对数，当 X &lt;= 0 时，返回的结果为 NULL</td></tr><tr><td>LOG10(X)</td><td>返回以 10 为底的 X 的对数，当 X &lt;= 0 时，返回的结果为 NULL</td></tr><tr><td>LOG2(X)</td><td>返回以 2 为底的 X 的对数，当 X &lt;= 0 时，返回 NULL</td></tr></tbody></table><h3 id="_5、进制间的转换" tabindex="-1"><a class="header-anchor" href="#_5、进制间的转换" aria-hidden="true">#</a> 5、进制间的转换</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>BIN(x)</td><td>返回 x 的二进制编码</td></tr><tr><td>HEX(x)</td><td>返回 x 的十六进制编码</td></tr><tr><td>OCT(x)</td><td>返回 x 的八进制编码</td></tr><tr><td>CONV(x,f1,f2)</td><td>返回 f1 进制数变成 f2 进制数</td></tr></tbody></table><h2 id="字符串函数" tabindex="-1"><a class="header-anchor" href="#字符串函数" aria-hidden="true">#</a> 字符串函数</h2><p><strong>注意：</strong></p><ul><li><p>字符串的索引是从 1 开始的。</p></li><li><p>任何一个函数都可以看做是一个查询的字段，可以将使用别名。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 將名字拼接起来，并且使用 - 连接，最后再重命名为该字段为 姓名 。</span>
<span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> last_name<span class="token punctuation">)</span> <span class="token string">&#39;姓名&#39;</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>ASCII(S)</td><td>返回字符串 S 中的第一个字符的 ASCII 码值</td></tr><tr><td>CHAR_LENGTH(s)</td><td>返回字符串 s 的字符数。作用与 CHARACTER_LENGTH(s)相同，无论中文还是英文一个字或者字母都只算 1 个字符。</td></tr><tr><td>LENGTH(s)</td><td>返回字符串 s 的字节数，和字符集有关，一个英文字母为 1 个字符，而一个汉子则是 3 个字符</td></tr><tr><td>CONCAT(s1,s2,......,sn)</td><td>连接 s1,s2,......,sn 为一个字符串</td></tr><tr><td>CONCAT_WS(x, s1,s2,......,sn)</td><td>同 CONCAT(s1,s2,...)函数，但是每个字符串之间要加上 x</td></tr><tr><td>INSERT(str, idx, len, replacestr)</td><td>将字符串 str 从第 idx 位置开始，len 个字符长的子串替换为字符串 replacestr</td></tr><tr><td>REPLACE(str, a, b)</td><td>用字符串 b 替换字符串 str 中所有出现的字符串 a</td></tr><tr><td>UPPER(s) 或 UCASE(s)</td><td>将字符串 s 的所有字母转成大写字母</td></tr><tr><td>LOWER(s) 或 LCASE(s)</td><td>将字符串 s 的所有字母转成小写字母</td></tr><tr><td>LEFT(str,n)</td><td>返回字符串 str 最左边的 n 个字符</td></tr><tr><td>RIGHT(str,n)</td><td>返回字符串 str 最右边的 n 个字符</td></tr><tr><td>LPAD(str, len, pad)</td><td>用字符串 pad 对 str 最左边进行填充，直到 str 的长度为 len 个字符</td></tr><tr><td>RPAD(str ,len, pad)</td><td>用字符串 pad 对 str 最右边进行填充，直到 str 的长度为 len 个字符</td></tr><tr><td>LTRIM(s)</td><td>去掉字符串 s 左侧的空格</td></tr><tr><td>RTRIM(s)</td><td>去掉字符串 s 右侧的空格</td></tr><tr><td>TRIM(s)</td><td>去掉字符串 s 开始与结尾的空格</td></tr><tr><td>TRIM(s1 FROM s)</td><td>去掉字符串 s 开始与结尾的 s1</td></tr><tr><td>TRIM(LEADING s1 FROM s)</td><td>去掉字符串 s 开始处的 s1</td></tr><tr><td>TRIM(TRAILING s1 FROM s)</td><td>去掉字符串 s 结尾处的 s1</td></tr><tr><td>REPEAT(str, n)</td><td>返回 str 重复 n 次的结果</td></tr><tr><td>SPACE(n)</td><td>返回 n 个空格</td></tr><tr><td>STRCMP(s1,s2)</td><td>比较字符串 s1,s2 的 ASCII 码值的大小</td></tr><tr><td>SUBSTR(s,index,len)</td><td>返回从字符串 s 的 index 位置其 len 个字符，作用与 SUBSTRING(s,n,len)、MID(s,n,len)相同</td></tr><tr><td>LOCATE(substr,str)</td><td>返回字符串 substr 在字符串 str 中首次出现的位置，作用于 POSITION(substr IN str)、INSTR(str,substr)相同。未找到，返回 0</td></tr><tr><td>ELT(m,s1,s2,…,sn)</td><td>返回指定位置的字符串，如果 m=1，则返回 s1，如果 m=2，则返回 s2，如果 m=n，则返回 sn</td></tr><tr><td>FIELD(s,s1,s2,…,sn)</td><td>返回字符串 s 在字符串列表中第一次出现的位置</td></tr><tr><td>FIND_IN_SET(s1,s2)</td><td>返回字符串 s1 在字符串 s2 中出现的位置。其中，字符串 s2 是一个以逗号分隔的字符串</td></tr><tr><td>REVERSE(s)</td><td>返回 s 反转后的字符串</td></tr><tr><td>NULLIF(value1,value2)</td><td>比较两个字符串，如果 value1 与 value2 相等，则返回 NULL，否则返回 value1</td></tr></tbody></table><h2 id="日期和时间函数" tabindex="-1"><a class="header-anchor" href="#日期和时间函数" aria-hidden="true">#</a> 日期和时间函数</h2><h3 id="获取时间日期" tabindex="-1"><a class="header-anchor" href="#获取时间日期" aria-hidden="true">#</a> 获取时间日期</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><strong>CURDATE()</strong> ，CURRENT_DATE()</td><td>返回当前日期，只包含年、月、日</td></tr><tr><td><strong>CURTIME()</strong> ， CURRENT_TIME()</td><td>返回当前时间，只包含时、分、秒</td></tr><tr><td><strong>NOW()</strong> / SYSDATE() / CURRENT_TIMESTAMP() / LOCALTIME() / LOCALTIMESTAMP()</td><td>返回当前系统日期和时间</td></tr><tr><td>UTC_DATE()</td><td>返回 UTC（世界标准时间）日期</td></tr><tr><td>UTC_TIME()</td><td>返回 UTC（世界标准时间）时间</td></tr></tbody></table><h3 id="_1、日期与时间戳的转换" tabindex="-1"><a class="header-anchor" href="#_1、日期与时间戳的转换" aria-hidden="true">#</a> 1、日期与时间戳的转换</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>UNIX_TIMESTAMP()</td><td>以 UNIX 时间戳的形式返回当前时间。SELECT UNIX_TIMESTAMP() -&gt;1634348884</td></tr><tr><td>UNIX_TIMESTAMP(date)</td><td>将时间 date 以 UNIX 时间戳的形式返回。</td></tr><tr><td>FROM_UNIXTIME(timestamp)</td><td>将 UNIX 时间戳的时间转换为普通格式的时间</td></tr></tbody></table><h3 id="_2、获取月份、星期、星期数、天数等函数" tabindex="-1"><a class="header-anchor" href="#_2、获取月份、星期、星期数、天数等函数" aria-hidden="true">#</a> 2、获取月份、星期、星期数、天数等函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>YEAR(date) / MONTH(date) / DAY(date)</td><td>返回具体的日期值</td></tr><tr><td>HOUR(time) / MINUTE(time) / SECOND(time)</td><td>返回具体的时间值</td></tr><tr><td>MONTHNAME(date)</td><td>返回月份：January，...</td></tr><tr><td>DAYNAME(date)</td><td>返回星期几：MONDAY，TUESDAY.....SUNDAY</td></tr><tr><td>WEEKDAY(date)</td><td>返回周几，注意，周 1 是 0，周 2 是 1，。。。周日是 6</td></tr><tr><td>QUARTER(date)</td><td>返回日期对应的季度，范围为 1 ～ 4</td></tr><tr><td>WEEK(date) ， WEEKOFYEAR(date)</td><td>返回一年中的第几周</td></tr><tr><td>DAYOFYEAR(date)</td><td>返回日期是一年中的第几天</td></tr><tr><td>DAYOFMONTH(date)</td><td>返回日期位于所在月份的第几天</td></tr><tr><td>DAYOFWEEK(date)</td><td>返回周几，注意：周日是 1，周一是 2，。。。周六是 7</td></tr></tbody></table><h3 id="_3、日期的操作函数" tabindex="-1"><a class="header-anchor" href="#_3、日期的操作函数" aria-hidden="true">#</a> 3、日期的操作函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>EXTRACT(type FROM date)</td><td>返回指定日期中特定的部分，type 指定返回的值</td></tr></tbody></table><p>type 取值说明</p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>MICROSECOND</td><td>毫秒</td></tr><tr><td>SECOND</td><td>秒</td></tr><tr><td>MINUTE</td><td>分</td></tr><tr><td>HOUR</td><td>时</td></tr><tr><td>DAY</td><td>天</td></tr><tr><td>WEEK</td><td>周</td></tr><tr><td>MONTH</td><td>月</td></tr><tr><td>QUARTER</td><td>季度</td></tr><tr><td>YEAR</td><td>年</td></tr><tr><td>SECOND_MICROSECOND</td><td>秒.毫秒</td></tr><tr><td>MINUTE_MICROSECOND</td><td>分.秒.毫秒</td></tr><tr><td>MINUTE_SECOND</td><td>分.秒</td></tr><tr><td>HOUR_MICROSECOND</td><td>小时.分.秒.毫秒</td></tr><tr><td>HOUR_SECOND</td><td>小时.分.秒</td></tr><tr><td>HOUR_MINUTE</td><td>小时.分</td></tr><tr><td>DAY_MICROSECOND</td><td>小时.分.秒.毫秒</td></tr><tr><td>DAY_SECOND</td><td>小时.分.秒</td></tr><tr><td>DAY_MINUTE</td><td>小时.分钟</td></tr><tr><td>DAY_HOUR</td><td>小时</td></tr><tr><td>YEAR_MONTH</td><td>年.月</td></tr></tbody></table><h3 id="_4、时间和秒钟转换的函数" tabindex="-1"><a class="header-anchor" href="#_4、时间和秒钟转换的函数" aria-hidden="true">#</a> 4、时间和秒钟转换的函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>TIME_TO_SEC(time)</td><td>将 time 转化为秒并返回结果值。转化的公式为：<code>小时*3600+分钟*60+秒</code></td></tr><tr><td>SEC_TO_TIME(seconds)</td><td>将 seconds 描述转化为包含小时、分钟和秒的时间</td></tr></tbody></table><h3 id="_5、计算日期和时间的函数" tabindex="-1"><a class="header-anchor" href="#_5、计算日期和时间的函数" aria-hidden="true">#</a> 5、计算日期和时间的函数</h3><p>一组</p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>DATE_ADD(datetime, INTERVAL expr type)，ADDDATE(date,INTERVAL expr type)</td><td>返回与给定日期时间相差 INTERVAL 时间段的日期时间</td></tr><tr><td>DATE_SUB(date,INTERVAL expr type)，SUBDATE(date,INTERVAL expr type)</td><td>返回与 date 相差 INTERVAL 时间间隔的日期</td></tr></tbody></table><p>type 可选值</p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>MICROSECOND</td><td>毫秒数</td></tr><tr><td>SECOND</td><td>秒数</td></tr><tr><td>MINUTE</td><td>分钟数</td></tr><tr><td>HOUR</td><td>小时数</td></tr><tr><td>DAY</td><td>天数</td></tr><tr><td>WEEK</td><td>周数</td></tr><tr><td>MONTH</td><td>月数</td></tr><tr><td>QUARTER</td><td>季度数</td></tr><tr><td>YEAR</td><td>年数</td></tr><tr><td>SECOND_MICROSECOND</td><td>秒.豪秒</td></tr><tr><td>MINUTE_MICROSECOND</td><td>分.豪秒</td></tr><tr><td>MINUTE_SECOND</td><td>分.秒</td></tr><tr><td>HOUR_MICROSECOND</td><td>小时.豪秒</td></tr><tr><td>HOUR_SECOND</td><td>小时.秒</td></tr><tr><td>HOUR_MINUTE</td><td>小时.分</td></tr><tr><td>DAY_MICROSECOND</td><td>天.豪秒</td></tr><tr><td>DAY_SECOND</td><td>天.秒</td></tr><tr><td>DAY_MINUTE</td><td>天.分钟</td></tr><tr><td>DAY_HOUR</td><td>天.小时</td></tr><tr><td>YEAR_MONTH</td><td>年.月</td></tr></tbody></table><p>二组</p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>ADDTIME(time1,time2)</td><td>返回 time1 加上 time2 的时间。当 time2 为一个数字时，代表的是<code>秒</code>，可以为负数</td></tr><tr><td>SUBTIME(time1,time2)</td><td>返回 time1 减去 time2 后的时间。当 time2 为一个数字时，代表的是<code>秒</code>，可以为负数</td></tr><tr><td>DATEDIFF(date1,date2)</td><td>返回 date1 - date2 的日期间隔天数</td></tr><tr><td>TIMEDIFF(time1, time2)</td><td>返回 time1 - time2 的时间间隔</td></tr><tr><td>FROM_DAYS(N)</td><td>返回从 0000 年 1 月 1 日起，N 天以后的日期</td></tr><tr><td>TO_DAYS(date)</td><td>返回日期 date 距离 0000 年 1 月 1 日的天数</td></tr><tr><td>LAST_DAY(date)</td><td>返回 date 所在月份的最后一天的日期</td></tr><tr><td>MAKEDATE(year,n)</td><td>针对给定年份与所在年份中的天数返回一个日期</td></tr><tr><td>MAKETIME(hour,minute,second)</td><td>将给定的小时、分钟和秒组合成时间并返回</td></tr><tr><td>PERIOD_ADD(time,n)</td><td>返回 time 加上 n 后的时间</td></tr></tbody></table><h3 id="_6、日期的格式化与解析" tabindex="-1"><a class="header-anchor" href="#_6、日期的格式化与解析" aria-hidden="true">#</a> 6、日期的格式化与解析</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>DATE_FORMAT(date,fmt)</td><td>按照字符串 fmt 格式化日期 date 值</td></tr><tr><td>TIME_FORMAT(time,fmt)</td><td>按照字符串 fmt 格式化时间 time 值</td></tr><tr><td>GET_FORMAT(date_type,format_type)</td><td>返回日期字符串的显示格式</td></tr><tr><td>STR_TO_DATE(str, fmt)</td><td>按照字符串 fmt 对 str 进行解析，解析为一个日期</td></tr></tbody></table><p>上述<code>非GET_FORMAT</code>函数中 fmt 参数常用的格式符：</p><table><thead><tr><th>格式符</th><th>说明</th><th>格式符</th><th>说明</th></tr></thead><tbody><tr><td>%Y</td><td>4 位数字表示年份</td><td>%y</td><td>表示两位数字表示年份</td></tr><tr><td>%M</td><td>月名表示月份（January,....）</td><td>%m</td><td>两位数字表示月份（01,02,03。。。）</td></tr><tr><td>%b</td><td>缩写的月名（Jan.，Feb.，....）</td><td>%c</td><td>数字表示月份（1,2,3,...）</td></tr><tr><td>%D</td><td>英文后缀表示月中的天数（1st,2nd,3rd,...）</td><td>%d</td><td>两位数字表示月中的天数(01,02...)</td></tr><tr><td>%e</td><td>数字形式表示月中的天数（1,2,3,4,5.....）</td><td></td><td></td></tr><tr><td>%H</td><td>两位数字表示小数，24 小时制（01,02..）</td><td>%h 和%I</td><td>两位数字表示小时，12 小时制（01,02..）</td></tr><tr><td>%k</td><td>数字形式的小时，24 小时制(1,2,3)</td><td>%l</td><td>数字形式表示小时，12 小时制（1,2,3,4....）</td></tr><tr><td>%i</td><td>两位数字表示分钟（00,01,02）</td><td>%S 和%s</td><td>两位数字表示秒(00,01,02...)</td></tr><tr><td>%W</td><td>一周中的星期名称（Sunday...）</td><td>%a</td><td>一周中的星期缩写（Sun.，Mon.,Tues.，..）</td></tr><tr><td>%w</td><td>以数字表示周中的天数(0=Sunday,1=Monday....)</td><td></td><td></td></tr><tr><td>%j</td><td>以 3 位数字表示年中的天数(001,002...)</td><td>%U</td><td>以数字表示年中的第几周，（1,2,3。。）其中 Sunday 为周中第一天</td></tr><tr><td>%u</td><td>以数字表示年中的第几周，（1,2,3。。）其中 Monday 为周中第一天</td><td></td><td></td></tr><tr><td>%T</td><td>24 小时制</td><td>%r</td><td>12 小时制</td></tr><tr><td>%p</td><td>AM 或 PM</td><td>%%</td><td>表示%</td></tr></tbody></table><h2 id="流程控制函数" tabindex="-1"><a class="header-anchor" href="#流程控制函数" aria-hidden="true">#</a> 流程控制函数</h2><p>流程处理函数可以根据不同的条件，执行不同的处理流程，可以在 SQL 语句中实现不同的条件选择。MySQL 中的流程处理函数主要包括 IF()、IFNULL()和 CASE()函数。</p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>IF(value,value1,value2)</td><td>如果 value 的值为 TRUE，返回 value1，否则返回 value2，类似于三元运算</td></tr><tr><td>IFNULL(value1, value2)</td><td>如果 value1 不为 NULL，返回 value1，否则返回 value2</td></tr><tr><td>CASE WHEN 条件 1 THEN 结果 1 WHEN 条件 2 THEN 结果 2 .... [ELSE resultn] END</td><td>相当于 Js 的 if...else if...else...</td></tr><tr><td>CASE expr WHEN 常量值 1 THEN 值 1 WHEN 常量值 1 THEN 值 1 .... [ELSE 值 n] END</td><td>相当于 Js 的 switch...case...</td></tr></tbody></table><p>示例</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># IF</span>
<span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token keyword">IF</span><span class="token punctuation">(</span>salary <span class="token operator">&gt;</span> <span class="token number">6000</span><span class="token punctuation">,</span> <span class="token string">&#39;高工资&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;低工资&#39;</span><span class="token punctuation">)</span> <span class="token string">&#39;工资&#39;</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>

<span class="token comment"># IFNULL</span>
<span class="token keyword">SELECT</span> commission_pct<span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span> <span class="token string">&#39;是null&#39;</span><span class="token punctuation">)</span> <span class="token string">&#39;detail&#39;</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>

<span class="token comment">#  CASE WHEN  THEN</span>
<span class="token keyword">SELECT</span> salary <span class="token punctuation">,</span> <span class="token keyword">CASE</span> department_id
	<span class="token keyword">WHEN</span> <span class="token number">10</span> <span class="token keyword">THEN</span> salary <span class="token operator">*</span> <span class="token number">1.1</span>
	<span class="token keyword">WHEN</span> <span class="token number">20</span> <span class="token keyword">THEN</span> salary <span class="token operator">*</span> <span class="token number">1.2</span>
	<span class="token keyword">WHEN</span> <span class="token number">30</span> <span class="token keyword">THEN</span> salary <span class="token operator">*</span> <span class="token number">1.3</span>
	<span class="token keyword">ELSE</span> salary <span class="token operator">*</span> <span class="token number">1.5</span>
<span class="token keyword">END</span> <span class="token string">&#39;增加的工资&#39;</span><span class="token punctuation">,</span> department_id
<span class="token keyword">FROM</span> employees

<span class="token keyword">SELECT</span> salary <span class="token punctuation">,</span> <span class="token keyword">CASE</span>
	<span class="token keyword">WHEN</span> department_id <span class="token operator">=</span> <span class="token number">10</span> <span class="token keyword">THEN</span> salary <span class="token operator">*</span> <span class="token number">1.1</span>
	<span class="token keyword">WHEN</span> department_id <span class="token operator">=</span> <span class="token number">20</span> <span class="token keyword">THEN</span> salary <span class="token operator">*</span> <span class="token number">1.2</span>
	<span class="token keyword">WHEN</span> department_id <span class="token operator">=</span> <span class="token number">30</span> <span class="token keyword">THEN</span> salary <span class="token operator">*</span> <span class="token number">1.3</span>
	<span class="token keyword">ELSE</span> salary <span class="token operator">*</span> <span class="token number">1.5</span>
<span class="token keyword">END</span> <span class="token string">&#39;增加的工资&#39;</span><span class="token punctuation">,</span> department_id
<span class="token keyword">FROM</span> employees
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="加密与解密函数" tabindex="-1"><a class="header-anchor" href="#加密与解密函数" aria-hidden="true">#</a> 加密与解密函数</h2><p>加密与解密函数主要用于对数据库中的数据进行加密和解密处理，以防止数据被他人窃取。这些函数在保证数据库安全时非常有用。</p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>PASSWORD(str)</td><td>返回字符串 str 的加密版本，41 位长的字符串。加密结果<code>不可逆</code>，常用于用户的密码加密</td></tr><tr><td>MD5(str)</td><td>返回字符串 str 的 md5 加密后的值，也是一种加密方式。若参数为 NULL，则会返回 NULL</td></tr><tr><td>SHA(str)</td><td>从原明文密码 str 计算并返回加密后的密码字符串，当参数为 NULL 时，返回 NULL。<code>SHA加密算法比MD5更加安全</code>。</td></tr><tr><td>ENCODE(value,password_seed)</td><td>返回使用 password_seed 作为加密密码加密 value</td></tr><tr><td>DECODE(value,password_seed)</td><td>返回使用 password_seed 作为加密密码解密 value</td></tr></tbody></table><h2 id="mysql-信息函数" tabindex="-1"><a class="header-anchor" href="#mysql-信息函数" aria-hidden="true">#</a> MySQL 信息函数</h2><p>MySQL 中内置了一些可以查询 MySQL 信息的函数。</p><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>VERSION()</td><td>返回当前 MySQL 的版本号</td></tr><tr><td>CONNECTION_ID()</td><td>返回当前 MySQL 服务器的连接数</td></tr><tr><td>DATABASE()，SCHEMA()</td><td>返回 MySQL 命令行当前所在的数据库</td></tr><tr><td>USER()，CURRENT_USER()、SYSTEM_USER()，SESSION_USER()</td><td>返回当前连接 MySQL 的用户名，返回结果格式为“主机名@用户名”</td></tr><tr><td>CHARSET(value)</td><td>返回字符串 value 自变量的字符集</td></tr><tr><td>COLLATION(value)</td><td>返回字符串 value 的比较规则</td></tr></tbody></table><h2 id="其他函数" tabindex="-1"><a class="header-anchor" href="#其他函数" aria-hidden="true">#</a> 其他函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>FORMAT(value,n)</td><td>返回对数字 value 进行格式化后的结果数据。n 表示<code>四舍五入</code>后保留到小数点后 n 位</td></tr><tr><td>CONV(value,from,to)</td><td>将 value 的值进行不同进制之间的转换</td></tr><tr><td>INET_ATON(ipvalue)</td><td>将以点分隔的 IP 地址转化为一个数字</td></tr><tr><td>INET_NTOA(value)</td><td>将数字形式的 IP 地址转化为以点分隔的 IP 地址</td></tr><tr><td>BENCHMARK(n,expr)</td><td>将表达式 expr 重复执行 n 次。用于测试 MySQL 处理 expr 表达式所耗费的时间</td></tr><tr><td>CONVERT(value USING char_code)</td><td>将 value 所使用的字符编码修改为 char_code</td></tr></tbody></table>`,54)])])}const p=d(e,[["render",n],["__file","function.html.vue"]]);export{p as default};
