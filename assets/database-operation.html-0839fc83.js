import{_ as n,o as a,c as e,e as l}from"./app-70f1c539.js";const t={};function p(d,s){return a(),e("div",null,[...s[0]||(s[0]=[l(`<h1 id="数据库表操作" tabindex="-1"><a class="header-anchor" href="#数据库表操作" aria-hidden="true">#</a> 数据库表操作</h1><h2 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作" aria-hidden="true">#</a> 数据库操作</h2><h3 id="_1、数据库命名规范" tabindex="-1"><a class="header-anchor" href="#_1、数据库命名规范" aria-hidden="true">#</a> 1、数据库命名规范</h3><ul><li>数据库名、表名不得超过 30 个字符，变量名限制为 29 个</li><li>必须只能包含 A–Z, a–z, 0–9, _共 63 个字符</li><li>数据库名、表名、字段名等对象名中间不要包含空格</li><li>同一个 MySQL 软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名</li><li>必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在 SQL 语句中使用\`（着重号）引起来</li><li>保持字段名和类型的一致性：在命名字段并为其指定数据类型的时候一定要保证一致性，假如数据类型在一个表里是整数，那在另一个表里可就别变成字符型了</li></ul><h3 id="_2、数据库创建" tabindex="-1"><a class="header-anchor" href="#_2、数据库创建" aria-hidden="true">#</a> 2、数据库创建</h3><ul><li>方式 1：创建数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>方式 2：创建数据库并指定字符集</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名 <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> 字符集<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>方式 3：判断数据库是否已经存在，不存在则创建数据库（<code>推荐</code>）</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果 MySQL 中已经存在相关的数据库，则忽略创建语句，不再创建数据库。</p><blockquote><p>注意：DATABASE 不能改名。一些可视化工具可以改名，它是建新库，把所有表复制到新库，再删旧库完成的。</p></blockquote><h3 id="_3、数据库使用" tabindex="-1"><a class="header-anchor" href="#_3、数据库使用" aria-hidden="true">#</a> 3、数据库使用</h3><ul><li>查看当前所有的数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span> <span class="token comment">#有一个S，代表多个数据库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看当前正在使用的数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">#使用的一个 mysql 中的全局函数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看指定库下所有的表</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span> <span class="token keyword">FROM</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看数据库的创建信息</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span>
或者：
<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名\\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用/切换数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意：要操作表格和数据之前必须先说明是对哪个数据库进行操作，否则就要对所有对象加上“数据库名.”。</p></blockquote><h3 id="_4、修改数据库" tabindex="-1"><a class="header-anchor" href="#_4、修改数据库" aria-hidden="true">#</a> 4、修改数据库</h3><ul><li>更改数据库字符集</li><li>数据库名是不能更改的，可视化工具更改是新创建一个库，再把原来的库移过去并删除。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> 数据库名 <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> 字符集<span class="token punctuation">;</span>  <span class="token comment">#比如：gbk、utf8等</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5、删除数据库" tabindex="-1"><a class="header-anchor" href="#_5、删除数据库" aria-hidden="true">#</a> 5、删除数据库</h3><ul><li>方式 1：删除指定的数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>方式 2：删除指定的数据库（<code>推荐</code>）</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="数据表操作" tabindex="-1"><a class="header-anchor" href="#数据表操作" aria-hidden="true">#</a> 数据表操作</h2><h3 id="_1、数据类型" tabindex="-1"><a class="header-anchor" href="#_1、数据类型" aria-hidden="true">#</a> 1、数据类型</h3><table><thead><tr><th>类型</th><th>类型举例</th></tr></thead><tbody><tr><td>整数类型</td><td>TINYINT、SMALLINT、MEDIUMINT、<strong>INT(或 INTEGER)</strong>、BIGINT</td></tr><tr><td>浮点类型</td><td>FLOAT、DOUBLE</td></tr><tr><td>定点数类型</td><td><strong>DECIMAL</strong></td></tr><tr><td>位类型</td><td>BIT</td></tr><tr><td>日期时间类型</td><td>YEAR、TIME、<strong>DATE</strong>、DATETIME、TIMESTAMP</td></tr><tr><td>文本字符串类型</td><td>CHAR、<strong>VARCHAR</strong>、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT</td></tr><tr><td>枚举类型</td><td>ENUM</td></tr><tr><td>集合类型</td><td>SET</td></tr><tr><td>二进制字符串类型</td><td>BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB、LONGBLOB</td></tr><tr><td>JSON 类型</td><td>JSON 对象、JSON 数组</td></tr><tr><td>空间数据类型</td><td>单值：GEOMETRY、POINT、LINESTRING、POLYGON；<br>集合：MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、GEOMETRYCOLLECTION</td></tr></tbody></table><p>其中，常用的几类类型介绍如下：</p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>INT</td><td>从-2^31 到 2^31-1 的整型数据。存储大小为 4 个字节</td></tr><tr><td>CHAR(size)</td><td>定长字符数据。若未指定，默认为 1 个字符，最大长度 255</td></tr><tr><td>VARCHAR(size)</td><td>可变长字符数据，根据字符串实际长度保存，<strong>必须指定长度</strong></td></tr><tr><td>FLOAT(M,D)</td><td>单精度，占用 4 个字节，M=整数位+小数位，D=小数位。 D&lt;=M&lt;=255,0&lt;=D&lt;=30，默认 M+D&lt;=6</td></tr><tr><td>DOUBLE(M,D)</td><td>双精度，占用 8 个字节，D&lt;=M&lt;=255,0&lt;=D&lt;=30，默认 M+D&lt;=15</td></tr><tr><td>DECIMAL(M,D)</td><td>高精度小数，占用 M+2 个字节，D&lt;=M&lt;=65，0&lt;=D&lt;=30，最大取值范围与 DOUBLE 相同。</td></tr><tr><td>DATE</td><td>日期型数据，格式&#39;YYYY-MM-DD&#39;</td></tr><tr><td>BLOB</td><td>二进制形式的长文本数据，最大可达 4G</td></tr><tr><td>TEXT</td><td>长文本数据，最大可达 4G</td></tr></tbody></table><h3 id="_2、创建表" tabindex="-1"><a class="header-anchor" href="#_2、创建表" aria-hidden="true">#</a> 2、创建表</h3><ol><li><p>语法</p><p>加上了 IF NOT EXISTS 关键字，则表示：如果当前数据库中不存在要创建的数据表，则创建数据表；如果当前数据库中已经存在要创建的数据表，则忽略建表语句，不再创建数据表。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 表名<span class="token punctuation">(</span>
	字段<span class="token number">1</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>
	字段<span class="token number">2</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>
	字段<span class="token number">3</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>
	……
	<span class="token punctuation">[</span>表约束条件<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>MySQL 在执行建表语句时，将 id 字段的类型设置为 int(11)，这里的 11 实际上是 int 类型指定的显示宽度，默认的显示宽度为 11。也可以在创建数据表的时候指定数据的显示宽度。</p><p><strong>在 MySQL 8.x 版本中，不推荐为 INT 类型指定显示长度，并在未来的版本中可能去掉这样的语法。</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept<span class="token punctuation">(</span>
    <span class="token comment">-- int类型，自增</span>
	deptno <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
	dname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	loc <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">-- 主键</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>deptno<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>通过已有的表来创建新表</p><ul><li>指定的列和子查询中的列要一一对应</li><li>通过列名和默认值定义列</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp1 <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp2 <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">-- 创建的emp2是空表</span>

<span class="token comment"># 或者</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept80
<span class="token keyword">AS</span>
<span class="token keyword">SELECT</span>  employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> salary<span class="token operator">*</span><span class="token number">12</span> ANNSAL<span class="token punctuation">,</span> hire_date
<span class="token keyword">FROM</span>    employees
<span class="token keyword">WHERE</span>   department_id <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_3、查看表结构" tabindex="-1"><a class="header-anchor" href="#_3、查看表结构" aria-hidden="true">#</a> 3、查看表结构</h3><p>在 MySQL 中创建好数据表之后，可以查看数据表的结构。MySQL 支持使用<code>DESCRIBE/DESC</code>语句查看数据表结构，也支持使用<code>SHOW CREATE TABLE</code>语句查看数据表结构。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名\\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4、修改表" tabindex="-1"><a class="header-anchor" href="#_4、修改表" aria-hidden="true">#</a> 4、修改表</h3><ol><li><p>追加一个列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> 字段名 字段类型 【<span class="token keyword">FIRST</span><span class="token operator">|</span><span class="token keyword">AFTER</span> 字段名】<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>往 employees 表添加 name 列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employees <span class="token keyword">ADD</span> name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改一个列</p><p>可以修改列的数据类型，长度、默认值和位置，默认值只对表后面的修改生效，并不会里面插入默认值。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名<span class="token number">1</span> 字段类型 【<span class="token keyword">DEFAULT</span> 默认值】【<span class="token keyword">FIRST</span><span class="token operator">|</span><span class="token keyword">AFTER</span> 字段名<span class="token number">2</span>】<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改 employees 的 name 字段为 int 并指定默认值为 1</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employees <span class="token keyword">MODIFY</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重命名一个列</p><p>使用<code>CHANGE old_column new_column dataType</code>子句重命名列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE 列名 新列名 新数据类型<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改 employees 的 name 为 new_name 并指定数据类型</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employees CHANGE <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> new_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>删除一个列</p><p>删除表中某个字段的语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> 字段名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除 employees 的 new_name 列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employees <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> new_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重命名表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">RENAME</span> <span class="token keyword">TABLE</span> 原表名 <span class="token keyword">TO</span> 新表名<span class="token punctuation">;</span>

<span class="token comment"># 或者</span>
<span class="token keyword">ALTER</span> <span class="token keyword">table</span> 原表名 <span class="token keyword">RENAME</span> <span class="token punctuation">[</span><span class="token keyword">TO</span><span class="token punctuation">]</span> 新表名<span class="token punctuation">;</span>  <span class="token comment">-- [TO]可以省略</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除表</p><ul><li>在 MySQL 中，当一张数据表<code>没有与其他任何数据表形成关联关系</code>时，可以将当前数据表直接删除。</li><li>数据和结构都被删除</li><li>所有正在运行的相关事务被提交</li><li>所有相关索引被删除</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 数据表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> 数据表<span class="token number">2</span><span class="token punctuation">,</span> …<span class="token punctuation">,</span> 数据表n<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除 employees 表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> employees
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>清空表</p><p>TRUNCATE TABLE，删除表中所有的数据，释放表的存储空间。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span> <span class="token comment"># 不可回滚</span>

<span class="token comment"># 或者</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span> <span class="token comment"># 可以回滚</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TRUNCATE 语句<strong>不能回滚</strong>，而使用 DELETE 语句删除数据，可以回滚。</p><p>DELETE FROM 会回滚之前要先执行<code>SET autocommit = FALSE</code>，清空表之后再执行<code>ROLLBACK</code>即可将表回滚至清空之前的状态。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 1</span>
<span class="token keyword">SET</span> autocommit <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">;</span>

<span class="token comment"># 2</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> emp2<span class="token punctuation">;</span>
<span class="token comment">#TRUNCATE TABLE emp2;</span>

<span class="token comment"># 3</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp2<span class="token punctuation">;</span>

<span class="token comment"># 4</span>
<span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span>

<span class="token comment"># 5</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,45)])])}const i=n(t,[["render",p],["__file","database-operation.html.vue"]]);export{i as default};
