import{_ as o,r as c,o as l,c as i,e as t,b as s,d as a,a as e}from"./app-70f1c539.js";const u={},k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/MouseEvent",target:"_blank",rel:"noopener noreferrer"},r={href:"https://www.runoob.com/http/mime-types.html",target:"_blank",rel:"noopener noreferrer"};function d(v,n){const p=c("ExternalLinkIcon");return l(),i("div",null,[n[8]||(n[8]=t(`<h1 id="js-技巧与积累" tabindex="-1"><a class="header-anchor" href="#js-技巧与积累" aria-hidden="true">#</a> js 技巧与积累</h1><h2 id="日期对象注意点" tabindex="-1"><a class="header-anchor" href="#日期对象注意点" aria-hidden="true">#</a> 日期对象注意点</h2><ol><li><p>日期对象虽然是一个对象，但是日期对象身上并没可枚举或者不可枚举的属性</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 日期对象有很多的方法</span>

<span class="token comment">// 得到一个空数组，因为日期对象身上并没可枚举或者不可枚举的属性</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 无法走进循环</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;日期&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Object.getOwnPropertyDescriptors(obj) 返回一个对象身上所有的可枚举和不可枚举属性的一个数组</p></blockquote></li><li><p>判断一个对象是否为空之前，一定要判断这个对象是不是一个日期对象，因为日期对象没有可枚举的属性，所以只要是日期对象就可以判断不为空。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 检测一个对象是不是日期对象</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
date <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="mouseevent-模拟鼠标事件" tabindex="-1"><a class="header-anchor" href="#mouseevent-模拟鼠标事件" aria-hidden="true">#</a> MouseEvent 模拟鼠标事件</h2><p>应用场景</p>`,5)),s("p",null,[n[1]||(n[1]=a("比如现在页面上有两个标签，一个有 click 事件，而另一个标签的 click 事件时通过 vue 的自定义指令去做的，此时你想通过绑有 click 的这个标签，去触发绑有自定义指令的这个标签的 click 事件，就可以通过**",-1)),s("a",k,[n[0]||(n[0]=s("code",null,"MouseEvent()",-1)),e(p)]),n[2]||(n[2]=a("**模拟鼠标事件去做到（因为这个自定义指令是点击就触发，无法在点击的时候做一些前置的处理，所以就只能通过另一个标签去触发）。",-1))]),n[9]||(n[9]=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onBtn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-custom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>custom&#39;<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customDiv<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> customDiv <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">onPrintClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建事件</span>
  <span class="token keyword">const</span> clickEvent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 派发事件</span>
  customDiv<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>clickEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下载服务端返回的文件流" tabindex="-1"><a class="header-anchor" href="#下载服务端返回的文件流" aria-hidden="true">#</a> 下载服务端返回的文件流</h2>`,3)),s("ol",null,[n[6]||(n[6]=s("li",null,"通过请求获取到文件流",-1)),s("li",null,[n[4]||(n[4]=a("结合服务端返回的文件类型，指定 blob 的",-1)),s("a",r,[n[3]||(n[3]=a("MIME",-1)),e(p)]),n[5]||(n[5]=a("类型，将文件流转为 blob 流。",-1))]),n[7]||(n[7]=s("li",null,"创建下载链接，创建 a 标签下载，删除链接，释放资源占用。",-1))]),n[10]||(n[10]=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios
  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;./download&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment">// 可以指定浏览器将要响应的数据类型为blob，也可以不指定，最好指定响应的数据类型为blob</span>
    <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&quot;blob&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 将文件转为blob流</span>
    <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>res<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;application/zip&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建下载链接</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建a标签，并赋值下载链接</span>
    <span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&quot;下载文件名&quot;</span><span class="token punctuation">;</span>
    link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 释放资源的占用</span>
    <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tofixed-精度问题导致四舍五入错误" tabindex="-1"><a class="header-anchor" href="#tofixed-精度问题导致四舍五入错误" aria-hidden="true">#</a> toFixed() 精度问题导致四舍五入错误</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>consle<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">28.215</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 28.21</span>

<span class="token comment">// 修正</span>
<span class="token keyword">const</span> _toFixed <span class="token operator">=</span> <span class="token class-name">Number</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toFixed<span class="token punctuation">;</span>

<span class="token class-name">Number</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toFixed</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">decimals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> factor <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> decimals<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 修正浮点误差后再进行四舍五入</span>
  <span class="token keyword">const</span> corrected <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">+</span> Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span><span class="token punctuation">)</span> <span class="token operator">*</span> factor<span class="token punctuation">)</span> <span class="token operator">/</span> factor<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">_toFixed</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>corrected<span class="token punctuation">,</span> decimals<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3))])}const b=o(u,[["render",d],["__file","js-skill.html.vue"]]);export{b as default};
