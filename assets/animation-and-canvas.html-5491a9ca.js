import{_ as a,o as s,c as t,e}from"./app-70f1c539.js";const p={};function o(c,n){return s(),t("div",null,[...n[0]||(n[0]=[e(`<h1 id="动画与-canvas-图形" tabindex="-1"><a class="header-anchor" href="#动画与-canvas-图形" aria-hidden="true">#</a> 动画与 Canvas 图形</h1><h2 id="使用-requestanimationframe" tabindex="-1"><a class="header-anchor" href="#使用-requestanimationframe" aria-hidden="true">#</a> 使用 requestAnimationFrame</h2><h3 id="定时动画" tabindex="-1"><a class="header-anchor" href="#定时动画" aria-hidden="true">#</a> 定时动画</h3><p>使用 setTimeout 或者 setInterval 实现的动画，会有时间精度的问题，虽然时间到了就会把你的动画添加到执行队列里面，但是并不能保证这一时刻动画就运行。</p><h3 id="requestanimationframe" tabindex="-1"><a class="header-anchor" href="#requestanimationframe" aria-hidden="true">#</a> requestAnimationFrame</h3><p>requestAnimationFrame 接收一个参数，此参数是一个要在重绘屏幕前调用的函数。这个函数就是修改 DOM 样式以反映下一次重绘有什么变化的地方。如果要循环的实现这个动画，可以把多个 requestAnimationFrame()调用串联起来。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>循环的调用这个函数<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;动画&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

或者<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;动画&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现一个盒子边长再变短往复的动画</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> width <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> isLong <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">updateProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;mydiv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> divWidth <span class="token operator">=</span> div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>divWidth <span class="token operator">&gt;</span> <span class="token number">1700</span> <span class="token operator">||</span> divWidth <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>divWidth <span class="token operator">&gt;</span> <span class="token number">1700</span><span class="token punctuation">)</span> isLong <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// 盒子的宽度不可能为负数</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>divWidth <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> isLong <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isLong<span class="token punctuation">)</span> width <span class="token operator">+=</span> <span class="token number">100</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span> width <span class="token operator">-=</span> <span class="token number">100</span><span class="token punctuation">;</span>
  div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> width <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>updateProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">updateProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cancelanimationframe" tabindex="-1"><a class="header-anchor" href="#cancelanimationframe" aria-hidden="true">#</a> cancelAnimationFrame</h3><p>取消通过 <code>requestAnimationFrame</code>创建的绘制任务，<code>requestAnimationFrame</code>会有一个返回值，用于标识他的绘制任务，可以将这个返回值传给<code>cancelAnimationFrame</code>来取消绘制任务。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> aniId<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;动画&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  aniId <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 3秒后关闭绘制任务</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>aniId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过-requestanimationframe-实现节流" tabindex="-1"><a class="header-anchor" href="#通过-requestanimationframe-实现节流" aria-hidden="true">#</a> 通过 requestAnimationFrame 实现节流</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> isRun <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;scroll&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isRun<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isRun <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>logNowTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>isRun <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> canvas</h2><h2 id="webgl-是-canvas-的-3d-上下文" tabindex="-1"><a class="header-anchor" href="#webgl-是-canvas-的-3d-上下文" aria-hidden="true">#</a> WebGL （是 canvas 的 3D 上下文）</h2>`,16)])])}const u=a(p,[["render",o],["__file","animation-and-canvas.html.vue"]]);export{u as default};
